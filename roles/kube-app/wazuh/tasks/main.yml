- name: check if wazuh namespace exists
  become: yes
  become_method: sudo
  kubernetes.core.k8s_info:
    kind: namespace
    name: wazuh
  register: __wazuh_namespace
  changed_when: False
  ignore_errors: yes

- name: Open firewalld port on all worker nodes
  become: yes
  become_method: sudo
  shell: "firewall-cmd --permanent --add-port=1514/tcp --add-port=1515/tcp --add-port=55000/tcp --add-port=9200/tcp"
  delegate_to: "{{ item }}"
  loop: "{{ groups['k8s_workers'] }}"

- name: Restart firewalld on all worker nodes
  become: yes
  become_method: sudo
  shell: "firewall-cmd --reload"
  delegate_to: "{{ item }}"
  loop: "{{ groups['k8s_workers'] }}"

- name: Open SELinux port on all worker nodes
  become: yes
  become_method: sudo
  shell: "semanage port -a -t http_port_t -p tcp 1514 && semanage port -a -t http_port_t -p tcp 1515 && semanage port -a -t http_port_t -p tcp 55000 && semanage port -a -t http_port_t -p tcp 9200"
  delegate_to: "{{ item }}"
  loop: "{{ groups['k8s_workers'] }}"

- name: check if git exists
  command: git --version
  register: __git_exists
  ignore_errors: yes
  changed_when: False

- name: install git
  become: yes
  become_method: sudo
  yum:
    name: git
    state: present
  when: __git_exists.rc != 0

- name: check if repository is clone
  stat:
    path: /tmp/wazuh-kubernetes
  register: __wazuh_repo

- name: delete repository
  become: yes
  become_method: sudo
  command: rm -rf /tmp/wazuh-kubernetes
  when: __wazuh_repo.stat.exists == True

- name: install wazuh
  when: __wazuh_namespace.resources | length == 0
  become: yes
  become_method: sudo
  block:
    - name: clone wazuh repo
      git:
        repo: https://github.com/wazuh/wazuh-kubernetes.git
        dest: /tmp/wazuh-kubernetes

    - name: generate index certificates
      command: /tmp/wazuh-kubernetes/wazuh/certs/indexer_cluster/generate_certs.sh

    - name: generate dashboard certificates
      command: /tmp/wazuh-kubernetes/wazuh/certs/dashboard_http/generate_certs.sh

    - name: changing ownership of certificates
      command: chown -R admintranet:admintranet /tmp/wazuh-kubernetes/wazuh/certs

    - name: Modify provisioner class
      lineinfile:
        path: /tmp/wazuh-kubernetes/envs/local-env/storage-class.yaml
        regexp: "provisioner: kubernetes.io/no-provisioner"
        line: "provisioner: microk8s.io/hostpath"

    - name: change version in deployment with replace
      become: yes
      become_method: sudo
      loop:
        - { path: "wazuh_managers/wazuh-worker-sts.yaml", container: "wazuh/wazuh-manager" }
        - { path: "wazuh_managers/wazuh-master-sts.yaml", container: "wazuh/wazuh-manager" }
        - { path: "indexer_stack/wazuh-indexer/cluster/indexer-sts.yaml", container: "wazuh/wazuh-indexer" }
        - { path: "indexer_stack/wazuh-dashboard/dashboard-deploy.yaml", container: "wazuh/wazuh-dashboard" }
      replace:
        path: "/tmp/wazuh-kubernetes/wazuh/{{ item.path }}"
        regexp: "{{ item.container }}:5.0.0"
        replace: "{{ item.container }}:4.9.2"

    - name: Edit service (add external IP) [LB]
      lineinfile:
        path: "/tmp/wazuh-kubernetes/wazuh/{{ item.path }}"
        insertafter: "EOF"
        regexp: "^"
        line: "  externalIPs: {{ item.ips }}"
      loop:
        - { path: "wazuh_managers/wazuh-master-svc.yaml",  ips: "{{ wazuh_master_ip }} " }
        - { path: "indexer_stack/wazuh-indexer/cluster/indexer-api-svc.yaml",  ips: "{{ wazuh_indexer_api_ip }}" }
        - { path: "wazuh_managers/wazuh-workers-svc.yaml", ips: "{{ wazuh_workers_ip }}" }

    - name: Edit service [ClusterIP]
      replace:
        path: /tmp/wazuh-kubernetes/wazuh/indexer_stack/wazuh-dashboard/dashboard-svc.yaml
        regexp: "LoadBalancer"
        replace: "ClusterIP"

    - name: Edit wazuh hash [Hidden values]
      replace:
        path: "/tmp/wazuh-kubernetes/wazuh/indexer_stack/wazuh-indexer/indexer_conf/internal_users.yml"
        regexp: "{{ item.regexp | regex_escape() }}"
        replace: "{{ item.replace }}"
      loop:
        - { regexp: "$2a$12$4AcgAt3xwOWadA5s5blL6ev39OXDNhmOesEoo33eZtrq2N0YrU3H.", replace: "{{ wazuh_secrets_dashboard_hash }}" }
        - { regexp: "$2y$12$K/SpwjtB.wOHJ/Nc6GVRDuc1h0rM1DfvziFRNPtk27P.c4yDr9njO", replace: "{{ wazuh_secrets_indexer_hash }}" }
      register: __wazuh_hash
      no_log: true

    - name: Edit wazuh secrets [Hidden values]
      replace:
        path: "/tmp/wazuh-kubernetes/wazuh/{{ item.path }}"
        regexp: "{{ item.regexp }}"
        replace: "{{ item.replace}}"
      loop:
        - { regexp: "TXlTM2NyMzdQNDUwci4qLQ==", replace: "{{ wazuh_secrets_api_cred | b64encode }}", path: "secrets/wazuh-api-cred-secret.yaml" }
        - { regexp: "password: a2liYW5hc2VydmVy", replace: "password: {{ wazuh_secrets_dashboard_pass | b64encode }}", path: "secrets/dashboard-cred-secret.yaml" }
        - { regexp: "U2VjcmV0UGFzc3dvcmQ=", replace: "{{ wazuh_secrets_indexer_pass | b64encode }}", path: "secrets/indexer-cred-secret.yaml" }
        - { regexp: "cGFzc3dvcmQ=", replace: "{{ wazuh_secrets_join_key | b64encode }}", path: "secrets/wazuh-authd-pass-secret.yaml" }
      register: __wazuh_secrets
      no_log: true

    - name: Add active response from config (to workers and master)
      blockinfile:
        path: "/tmp/wazuh-kubernetes/wazuh/{{ item }}"
        block: "{{ lookup('ansible.builtin.file', 'active-response.xml') | indent(width=2) }}"
        insertbefore: "<!-- Log analysis -->"
        marker: "    <!-- {mark} ANSIBLE MANAGED BLOCK -->"
      loop:
        - "wazuh_managers/wazuh_conf/worker.conf"
        - "wazuh_managers/wazuh_conf/master.conf"

    - name: "Set memory limit to {{ wazuh_memory_limit }}"
      replace:
        path: "/tmp/wazuh-kubernetes/wazuh/{{ item }}"
        regexp: "memory: 512Mi"
        replace: "memory: {{ wazuh_memory_limit }}"
      loop:
        - "wazuh_managers/wazuh-master-sts.yaml"
        - "wazuh_managers/wazuh-worker-sts.yaml"

    - name: build wazuh manifest with kustomize
      shell: "kustomize build /tmp/wazuh-kubernetes/envs/local-env > /tmp/wazuh.yaml"

    - name: apply wazuh
      become: yes
      become_method: sudo
      shell: "kubectl apply -f /tmp/wazuh.yaml"

    - name: Creating pv
      include_tasks: create_pv.yml
      loop:
        - { name: "wazuh-index-pv", size: "10Gi", claim_name: "wazuh-indexer-wazuh-indexer-0", path: "{{ wazuh_pv_index_path }}" }
        - { name: "wazuh-manager-master-0-pv", size: "5Gi", claim_name: "wazuh-manager-master-wazuh-manager-master-0",path: "{{ wazuh_pv_manager_master_path }}" }
        - { name: "wazuh-manager-worker-0-pv", size: "5Gi", claim_name: "wazuh-manager-worker-wazuh-manager-worker-0",path: "{{ wazuh_pv_manager_worker_path }}" }

    - name: clean up
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /tmp/wazuh-kubernetes
        - /tmp/wazuh.yaml

    - name: wait for indexer ready
      become: yes
      become_method: sudo
      shell: "kubectl wait --for=condition=ready -n wazuh pod/wazuh-indexer-0"
      register: __wazuh_indexer_ready
      until: __wazuh_indexer_ready.rc == 0
      retries: 20

    - name: Reload security config in pod
      when: false
      kubernetes.core.k8s_exec:
        namespace: wazuh
        pod: wazuh-indexer-0
        command: 'bash -c "export JAVA_HOME=/usr/share/wazuh-indexer/jdk && /usr/share/wazuh-indexer/plugins/opensearch-security/tools/securityadmin.sh -cd /usr/share/wazuh-indexer/opensearch-security/ -nhnv -cacert  /usr/share/wazuh-indexer/certs/root-ca.pem -cert /usr/share/wazuh-indexer/certs/admin.pem  -key /usr/share/wazuh-indexer/certs/admin-key.pem -p 9200 -icl -h \$NODE_NAME"'
      register: __wazuh_reload_security
      failed_when: __wazuh_reload_security.rc != 0

- name: Check if ingress exist
  become: yes
  become_method: sudo
  kubernetes.core.k8s_info:
    kind: Ingress
    name: wazuh-ingress
    namespace: wazuh
  register: __wazuh_ingress
  changed_when: False
  ignore_errors: yes

- name: Check if default ssl certificate exist
  become: yes
  become_method: sudo
  kubernetes.core.k8s_info:
    kind: Secret
    namespace: ingress-nginx
    name: "{{ nginx_global_cert_name }}"
  register: __cert

    #- name: Fail if no default certificate found
    #when: __cert.resources | length == 0
    #fail:
    #msg: "No default certificate found, please run playbook with kube-app/nginx role first"
- name: Create ingress
  become: yes
  become_method: sudo
  when: __wazuh_ingress.resources | length == 0
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: wazuh-ingress
        namespace: wazuh
        annotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      spec:
        tls:
          - hosts:
              - "{{ wazuh_ingress_host }}"
        ingressClassName: "nginx"
        rules:
          - host: "{{ wazuh_ingress_host }}"
            http:
              paths:
                - path: /
                  pathType: Prefix
                  backend:
                    service:
                      name: dashboard
                      port:
                        number: 443
